{"ast":null,"code":"var _jsxFileName = \"/Users/singyeongdeog/Documents/github_code/chatting-frontend/src/pages/ChatPage/ChatPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = ({\n  history,\n  location,\n  match\n}) => {\n  _s();\n\n  const params = queryString.parse(location.search);\n  const displayName = params.display_name;\n  const {\n    id\n  } = match.params;\n  const [ws, setWs] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMsg, setNewMsg] = useState(undefined);\n  const [newRead, setNewRead] = useState(undefined);\n  const [currMsg, setCurrMsg] = useState(\"\");\n  useEffect(() => {\n    setWs(new WebSocket(`ws://localhost:8000/chat?id=${id}&name=${displayName}`));\n  }, []);\n  useEffect(() => {\n    if (ws) {\n      ws.onmessage = evt => {\n        const data = JSON.parse(evt.data); // alert(\"author\" in data)\n        // alert(\"message\" in data)\n        // alert(\"isRead\" in data)\n\n        for (let prop in data) {\n          alert(prop + \": \" + data[prop]);\n        }\n\n        if (\"author\" in data && \"message\" in data && \"is_read\" in data) {\n          setNewMsg(data);\n        } else if (\"readUser\" in data) {\n          setNewRead(data);\n        }\n      };\n    }\n  }, [ws]);\n  useEffect(() => {\n    if (newMsg) {\n      setMessages(messages.concat(newMsg));\n    }\n  }, [newMsg]);\n  useEffect(() => {\n    if (newRead) {\n      const updatedMessages = messages.map(message => {\n        if (message.author !== newRead.readUser) {\n          return { ...message,\n            isRead: true\n          };\n        }\n\n        return message;\n      });\n      setMessages(updatedMessages);\n    }\n  });\n\n  const handleChangeCurrMsg = msg => {\n    setCurrMsg(msg);\n  };\n\n  const handleClickSendMsg = () => {\n    if (currMsg === \"\") {\n      alert(\"메세지를 입력하세요\");\n      return;\n    }\n\n    ws === null || ws === void 0 ? void 0 : ws.send(currMsg);\n    setCurrMsg(\"\");\n  };\n\n  const handleKeyPress = key => {\n    if (key === \"Enter\") handleClickSendMsg();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-name-container\",\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-list-inner-container\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message-form ${message.author === displayName ? \"me\" : \"other\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-inner-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-display-name`,\n              children: message.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-read\",\n              children: message.isRead ? \"읽음\" : \"안읽음\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        value: currMsg,\n        onChange: e => handleChangeCurrMsg(e.target.value),\n        onKeyPress: e => handleKeyPress(e.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-send-button\",\n        onClick: handleClickSendMsg,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatPage, \"ITyEi/GsaVrqhLKjHs9+mvcQxjE=\");\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/singyeongdeog/Documents/github_code/chatting-frontend/src/pages/ChatPage/ChatPage.tsx"],"names":["React","useEffect","useState","queryString","ChatPage","history","location","match","params","parse","search","displayName","display_name","id","ws","setWs","messages","setMessages","newMsg","setNewMsg","undefined","newRead","setNewRead","currMsg","setCurrMsg","WebSocket","onmessage","evt","data","JSON","prop","alert","concat","updatedMessages","map","message","author","readUser","isRead","handleChangeCurrMsg","msg","handleClickSendMsg","send","handleKeyPress","key","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport queryString from 'query-string';\nimport \"./index.scss\";\n\ntype Message = {\n    author: string,\n    message: string,\n    isRead: boolean,\n}\n\ntype Read = {\n    readUser: string,\n}\n\ntype PathVariables = {\n    id: number\n}\n\nconst ChatPage = ({ history, location, match }: RouteComponentProps) => {\n    const params = queryString.parse(location.search)\n    const displayName = params.display_name\n\n    const {id} = match.params as PathVariables\n\n    const [ws, setWs] = useState<WebSocket>();\n    const [messages, setMessages] = useState<Array<Message>>([]);\n    const [newMsg, setNewMsg] = useState<Message | undefined>(undefined);\n    const [newRead, setNewRead] = useState<Read | undefined>(undefined);\n    const [currMsg, setCurrMsg] = useState(\"\");\n\n    useEffect(() => {\n        setWs(new WebSocket(`ws://localhost:8000/chat?id=${id}&name=${displayName}`))\n    }, [])\n\n    useEffect(() => {\n        if (ws) {\n            ws.onmessage = (evt) => {\n                const data = JSON.parse(evt.data);\n                // alert(\"author\" in data)\n                // alert(\"message\" in data)\n                // alert(\"isRead\" in data)\n                for (let prop in data) {\n                    alert(prop + \": \" + data[prop]);\n                }\n                if (\"author\" in data && \"message\" in data && \"is_read\" in data) {\n                    setNewMsg(data as Message);\n                } else if (\"readUser\" in data) {\n                    setNewRead(data as Read);\n                }\n            };\n        }\n    }, [ws])\n\n    useEffect(() => {\n        if (newMsg) {\n            setMessages(\n                messages.concat(newMsg)\n            )\n        }\n    }, [newMsg])\n\n    useEffect(() => {\n        if(newRead) {\n            const updatedMessages = messages.map(message => {\n                if (message.author !== newRead.readUser) {\n                    return { ...message, isRead: true };\n                }\n                return message;\n            });\n\n            setMessages(updatedMessages)\n        }\n    })\n\n    const handleChangeCurrMsg = (msg: string) => {\n        setCurrMsg(msg)\n    }\n\n    const handleClickSendMsg = () => {\n        if (currMsg === \"\") {\n            alert(\"메세지를 입력하세요\")\n            return\n        }\n\n        ws?.send(currMsg)\n\n        setCurrMsg(\"\")\n    }\n\n    const handleKeyPress = (key: string) => {\n        if (key === \"Enter\") handleClickSendMsg()\n    }\n\n    return (\n        <div className={\"chat-page-container\"}>\n            <div className={\"room-name-container\"}>\n                {id}\n            </div>\n            <div className={\"chat-message-list-container\"}>\n                <div className={\"chat-message-list-inner-container\"}>\n                    {\n                        messages.map(message =>\n                            <div className={`chat-message-form ${message.author === displayName ? \"me\" : \"other\"}`}>\n                                <div className={\"chat-message-inner-form\"}>\n                                    <div className={`chat-display-name`}>\n                                        {message.author}\n                                    </div>\n                                    <div className={\"chat-message\"}>{message.message}</div>\n                                    <div className={\"chat-read\"}>\n                                        {message.isRead ? \"읽음\" : \"안읽음\"}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n            <div className={\"chat-input-container\"}>\n                <input\n                    className={\"chat-input\"}\n                    value={currMsg}\n                    onChange={(e) => handleChangeCurrMsg(e.target.value)}\n                    onKeyPress={e => handleKeyPress(e.key)}\n                />\n                <button className={\"chat-send-button\"} onClick={handleClickSendMsg}>send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}