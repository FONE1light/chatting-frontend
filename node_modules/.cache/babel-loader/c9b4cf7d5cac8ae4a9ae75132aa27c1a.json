{"ast":null,"code":"var _jsxFileName = \"/Users/singyeongdeog/Documents/github_code/chatting-frontend/src/pages/ChatPage/ChatPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport \"./index.scss\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = ({\n  history,\n  location,\n  match\n}) => {\n  _s();\n  const params = queryString.parse(location.search);\n  const displayName = params.display_name;\n  const {\n    id\n  } = match.params;\n  const [ws, setWs] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMsg, setNewMsg] = useState(undefined);\n  const [newRead, setNewRead] = useState(undefined);\n  const [currMsg, setCurrMsg] = useState(\"\");\n  useEffect(() => {\n    setWs(new WebSocket(`ws://localhost:8000/chat?id=${id}&name=${displayName}`));\n  }, []);\n  useEffect(() => {\n    if (ws) {\n      ws.onmessage = evt => {\n        const data = JSON.parse(evt.data);\n        switch (data.type) {\n          case \"user_incoming_message\":\n            setNewMsg(data);\n            break;\n          case \"message_read\":\n            setNewRead(data);\n            break;\n          default:\n            break;\n        }\n      };\n    }\n  }, [ws]);\n  useEffect(() => {\n    if (newMsg) {\n      setMessages(messages.concat(newMsg));\n    }\n  }, [newMsg]);\n  useEffect(() => {\n    if (newRead) {\n      const updatedMessages = messages.map(message => {\n        return {\n          ...message,\n          isRead: true\n        };\n      });\n      setMessages(updatedMessages);\n    }\n  }, [newRead]);\n  const handleChangeCurrMsg = msg => {\n    setCurrMsg(msg);\n  };\n  const generateMessageId = () => {\n    return uuidv4();\n  };\n  const handleClickSendMsg = () => {\n    if (currMsg === \"\") {\n      alert(\"메세지를 입력하세요\");\n      return;\n    }\n    const messageId = generateMessageId(); // 고유한 메시지 ID 생성\n\n    const message = {\n      messageId: messageId,\n      author: (displayName === null || displayName === void 0 ? void 0 : displayName.toString()) || \"\",\n      message: currMsg,\n      isRead: false\n    };\n    ws === null || ws === void 0 ? void 0 : ws.send(JSON.stringify({\n      type: \"user_incoming_message\",\n      ...message\n    }));\n    setCurrMsg(\"\");\n  };\n  const handleKeyPress = key => {\n    if (key === \"Enter\") handleClickSendMsg();\n  };\n  const markMessageAsRead = messageId => {\n    ws === null || ws === void 0 ? void 0 : ws.send(JSON.stringify({\n      type: \"message_read\",\n      messageId\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-name-container\",\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message-list-inner-container\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          // 이전에 추가한 고유 ID를 사용합니다.\n          className: `chat-message-form ${message.author === displayName ? \"me\" : \"other\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-message-inner-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-display-name`,\n              children: message.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-message\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-read\",\n              children: message.isRead ? \"읽음\" : \"안읽음\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)\n        }, message.messageId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        value: currMsg,\n        onChange: e => handleChangeCurrMsg(e.target.value),\n        onKeyPress: e => handleKeyPress(e.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-send-button\",\n        onClick: handleClickSendMsg,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"ITyEi/GsaVrqhLKjHs9+mvcQxjE=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","queryString","v4","uuidv4","jsxDEV","_jsxDEV","ChatPage","history","location","match","_s","params","parse","search","displayName","display_name","id","ws","setWs","messages","setMessages","newMsg","setNewMsg","undefined","newRead","setNewRead","currMsg","setCurrMsg","WebSocket","onmessage","evt","data","JSON","type","concat","updatedMessages","map","message","isRead","handleChangeCurrMsg","msg","generateMessageId","handleClickSendMsg","alert","messageId","author","toString","send","stringify","handleKeyPress","key","markMessageAsRead","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["/Users/singyeongdeog/Documents/github_code/chatting-frontend/src/pages/ChatPage/ChatPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport queryString from 'query-string';\nimport \"./index.scss\";\nimport { v4 as uuidv4 } from 'uuid';\n\ntype MessageType = \"user_incoming_message\" | \"message_read\";\n\ntype Message = {\n    messageId: string,\n    author: string,\n    message: string,\n    isRead: boolean,\n}\n\ntype PathVariables = {\n    id: number\n}\n\nconst ChatPage = ({ history, location, match }: RouteComponentProps) => {\n    const params = queryString.parse(location.search)\n    const displayName = params.display_name\n\n    const {id} = match.params as PathVariables\n\n    const [ws, setWs] = useState<WebSocket>();\n    const [messages, setMessages] = useState<Array<Message>>([]);\n    const [newMsg, setNewMsg] = useState<Message | undefined>(undefined);\n    const [newRead, setNewRead] = useState<Message | undefined>(undefined);\n    const [currMsg, setCurrMsg] = useState(\"\");\n\n    useEffect(() => {\n        setWs(new WebSocket(`ws://localhost:8000/chat?id=${id}&name=${displayName}`))\n    }, [])\n\n    useEffect(() => {\n        if (ws) {\n            ws.onmessage = (evt) => {\n                const data = JSON.parse(evt.data);\n                switch (data.type) {\n                    case \"user_incoming_message\":\n                        setNewMsg(data as Message);\n                        break;\n                    case \"message_read\":\n                        setNewRead(data as Message);\n                        break;\n                    default:\n                        break;\n                }\n            };\n        }\n    }, [ws]);\n\n    useEffect(() => {\n        if (newMsg) {\n            setMessages(\n                messages.concat(newMsg)\n            )\n        }\n    }, [newMsg])\n\n    useEffect(() => {\n        if(newRead) {\n            const updatedMessages = messages.map(message => {\n                return { ...message, isRead: true };\n            });\n\n            setMessages(updatedMessages)\n        }\n    }, [newRead])\n\n    const handleChangeCurrMsg = (msg: string) => {\n        setCurrMsg(msg)\n    }\n\n    const generateMessageId = (): string => {\n        return uuidv4();\n    };\n\n    const handleClickSendMsg = () => {\n        if (currMsg === \"\") {\n            alert(\"메세지를 입력하세요\")\n            return\n        }\n\n        const messageId = generateMessageId(); // 고유한 메시지 ID 생성\n\n        const message: Message = {\n            messageId: messageId,\n            author: displayName?.toString() || \"\",\n            message: currMsg,\n            isRead: false,\n        };\n\n        ws?.send(JSON.stringify({ type: \"user_incoming_message\", ...message }));\n\n        setCurrMsg(\"\")\n    }\n\n    const handleKeyPress = (key: string) => {\n        if (key === \"Enter\") handleClickSendMsg()\n    }\n\n    const markMessageAsRead = (messageId: string) => {\n        ws?.send(JSON.stringify({ type: \"message_read\", messageId }));\n    };\n\n    return (\n        <div className={\"chat-page-container\"}>\n            <div className={\"room-name-container\"}>\n                {id}\n            </div>\n            <div className={\"chat-message-list-container\"}>\n                <div className={\"chat-message-list-inner-container\"}>\n                    {\n                        messages.map((message) => (\n                            <div\n                                key={message.messageId} // 이전에 추가한 고유 ID를 사용합니다.\n                                className={`chat-message-form ${\n                                    message.author === displayName ? \"me\" : \"other\"\n                                }`}\n                            >\n                                <div className={\"chat-message-inner-form\"}>\n                                    <div className={`chat-display-name`}>{message.author}</div>\n                                    <div className={\"chat-message\"}>{message.message}</div>\n                                    <div className={\"chat-read\"}>\n                                        {message.isRead ? \"읽음\" : \"안읽음\"}\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className={\"chat-input-container\"}>\n                <input\n                    className={\"chat-input\"}\n                    value={currMsg}\n                    onChange={(e) => handleChangeCurrMsg(e.target.value)}\n                    onKeyPress={e => handleKeyPress(e.key)}\n                />\n                <button className={\"chat-send-button\"} onClick={handleClickSendMsg}>send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}